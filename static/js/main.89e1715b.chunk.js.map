{"version":3,"sources":["NavTabs.js","Stores.js","Products.js","App.js","index.js"],"names":["NavTab","props","View","style","CSS","navbar","Pressable","tab","borderRightWidth","onPress","setScreenName","Text","tabText","color","screenName","StyleSheet","create","flexDirection","alignItems","justifyContent","marginBottom","backgroundColor","width","padding","fontFamily","textAlign","fontSize","Stores","alignSelf","Products","styles","container","flex","App","useState","SwitchTab","AppRegistry","registerComponent","runApplication","rootTag","document","getElementById"],"mappings":"6MAGe,SAASA,EAAOC,GAC7B,OAGE,cAFA,CAECC,EAAA,EAAD,CAAMC,MAAOC,EAAIC,OAAjB,UACE,cAACC,EAAA,EAAD,CACEH,MAAO,CAACC,EAAIG,IAAK,CAAEC,iBAAkB,IACrCC,QAAS,kBAAMR,EAAMS,cAAc,SAA1B,EAFX,SAIE,cAACC,EAAA,EAAD,CACER,MAAO,CACLC,EAAIQ,QACJ,CAAEC,MAA4B,WAArBZ,EAAMa,WAA0B,UAAY,SAHzD,sBAUF,cAACR,EAAA,EAAD,CACEH,MAAOC,EAAIG,IACXE,QAAS,kBAAMR,EAAMS,cAAc,WAA1B,EAFX,SAIE,cAACC,EAAA,EAAD,CACER,MAAO,CACLC,EAAIQ,QACJ,CAAEC,MAA4B,aAArBZ,EAAMa,WAA4B,UAAY,SAH3D,0BAWP,CAED,IAAMV,EAAMW,IAAWC,OAAO,CAC5BX,OAAQ,CACNY,cAAe,MACfC,WAAY,SACZC,eAAgB,eAChBC,aAAc,IAEhBb,IAAK,CACHc,gBAAiB,UACjBC,MAAO,MACPC,QAAS,GAEXX,QAAS,CACPY,WAAY,gBACZC,UAAW,SACXC,SAAU,MC3CCC,EARA,WACb,OACE,cAACzB,EAAA,EAAD,CAAMC,MAAO,CAAEyB,UAAW,UAA1B,SACE,cAACjB,EAAA,EAAD,2BAGL,ECGckB,EARE,WACb,OACE,cAAC3B,EAAA,EAAD,CAAMC,MAAO,CAAEyB,UAAW,UAA1B,SACE,cAACjB,EAAA,EAAD,2BAGP,ECyBKmB,EAASf,IAAWC,OAAO,CAC/Be,UAAW,CACTC,KAAM,EACNV,MAAO,OACPD,gBAAiB,UAINY,EArCH,WACV,MAAoCC,mBAAS,YAA7C,mBAAOpB,EAAP,KAAmBJ,EAAnB,KASMyB,EAAY,WAChB,OAAQrB,GACN,IAAK,SAIL,QACE,OAAO,cAAC,EAAD,IAHT,IAAK,WACH,OAAO,cAAC,EAAD,IAIZ,EAED,OACE,eAACZ,EAAA,EAAD,CAAMC,MAAO2B,EAAOC,UAApB,UACE,cAAC/B,EAAD,CAASc,WAAYA,EAAYJ,cAAeA,IAChD,cAACyB,EAAD,MAGL,EC9BDC,IAAYC,kBAAkB,OAAO,kBAAMJ,CAAN,IAErCG,IAAYE,eAAe,MAAO,CAChCC,QAASC,SAASC,eAAe,S","file":"static/js/main.89e1715b.chunk.js","sourcesContent":["import React from \"react\";\nimport { View, Text, StyleSheet, Pressable } from \"react-native\";\n\nexport default function NavTab(props) {\n  return (\n    // In case you have several tabs or dynamic tabs then you can have your tabs/screenNames\n    // in an array and use forEach to loop through them for display\n    <View style={CSS.navbar}>\n      <Pressable\n        style={[CSS.tab, { borderRightWidth: 1 }]}\n        onPress={() => props.setScreenName(\"Stores\")}\n      >\n        <Text\n          style={[\n            CSS.tabText,\n            { color: props.screenName === \"Stores\" ? \"#fac300\" : \"#fff\" }\n          ]}\n        >\n          Stores\n        </Text>\n      </Pressable>\n\n      <Pressable\n        style={CSS.tab}\n        onPress={() => props.setScreenName(\"Products\")}\n      >\n        <Text\n          style={[\n            CSS.tabText,\n            { color: props.screenName === \"Products\" ? \"#fac300\" : \"#fff\" }\n          ]}\n        >\n          Products\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n\nconst CSS = StyleSheet.create({\n  navbar: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    marginBottom: 10\n  },\n  tab: {\n    backgroundColor: \"#2C4770\",\n    width: \"50%\",\n    padding: 5\n  },\n  tabText: {\n    fontFamily: \"Cairo-Regular\",\n    textAlign: \"center\",\n    fontSize: 20\n  }\n});\n","import React, { useState } from \"react\";\nimport { View, Text } from \"react-native\";\n\nconst Stores = () => {\n  return (\n    <View style={{ alignSelf: \"center\" }}>\n      <Text>Stores Page</Text>\n    </View>\n  );\n};\n\nexport default Stores;\n","import React, { useState } from \"react\";\nimport { View, Text } from \"react-native\";\n\n\nconst Products = () => { \n    return (\n      <View style={{ alignSelf: \"center\" }}>\n        <Text>Stores Page</Text>\n      </View>\n    ) \n}\n\nexport default Products;","import React, { useState } from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport NavTabs from \"./NavTabs\";\nimport Stores from \"./Stores\";\nimport Products from \"./Products\";\n\nconst App = () => {\n  const [screenName, setScreenName] = useState(\"Products\");\n\n  //TODO to utilize the backhandler for naviagtion history we need to\n  //useEffect for backhandler press and a stack for screenNames\n  //This way everytime we navigate to a new tab then the screen name will be pushed into the stack\n  //and if the backhandler is pressed then the last inserted item in the stack will be popped out\n  //and app will navigate to the screen name left on the top of the stack\n\n  //The list of screens you want your app or page to navigate to\n  const SwitchTab = () => {\n    switch (screenName) {\n      case \"Stores\":\n        return <Stores />;\n      case \"Products\":\n        return <Products />;\n      default:\n        return <Stores />;\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <NavTabs screenName={screenName} setScreenName={setScreenName} />\n      <SwitchTab />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: \"100%\",\n    backgroundColor: \"#fff\"\n  }\n});\n\nexport default App;\n","import { AppRegistry } from \"react-native\";\nimport App from \"./App\";\n\nAppRegistry.registerComponent(\"App\", () => App);\n\nAppRegistry.runApplication(\"App\", {\n  rootTag: document.getElementById(\"root\")\n});\n"],"sourceRoot":""}